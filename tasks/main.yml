---
# template tasks file

- name: add java repo key
  apt_key: 
    url: https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public
    state: present
  tags: Java

- name: add java repo
  apt_repository:
    repo: deb https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/ bionic main
    state: present
  tags: java

- name: apt install dependancies
  apt:
    update_cache: true
    pkg:
    - postgresql
    - postgresql-contrib
    - phppgadmin
    - libpq-dev
    - python3-pip
    - apt-transport-https
    - ca-certificates
    - wget
    - dirmngr
    - gnupg
    - software-properties-common
    - adoptopenjdk-8-hotspot
    - curl
  tags: packages, java

- name: install python libraries
  pip:
    name: psycopg2
  tags: packages

- name: set enivronmenet variables
  lineinfile:
    path: /etc/environment
    line: JAVA_HOME="/usr/lib/jvm/adoptopenjdk-8-hotspot-amd64"
  tags: java

- name: create postgres wifimon user
  become_user: postgres
  become: yes
  postgresql_user:
    name: wifimon_user
    password: "wifmonpass"
  tags: postgresql

- name: Create wifimon database
  become: yes
  become_user: postgres
  postgresql_db:
    name: wifimon_database
    owner: wifimon_user
  tags: postgresql

- name: create subnets table
  become: yes
  become_user: postgres
  postgresql_table: 
    db: wifimon_database
    name: subnets
    columns:
    - subnet text
    - subnet_id serial primary key 
  tags: postgresql

- name: create users table
  become: yes
  become_user: postgres
  postgresql_table: 
    db: wifimon_database
    name: users
    columns:
    - id serial primary key
    - email text not null
    - password_hash text not null
    - role text not null
  tags: postgresql

- name: create accesspoints table
  become: yes
  become_user: postgres
  postgresql_table: 
    db: wifimon_database
    name: accesspoints
    columns:
    - apid serial primary key
    - mac text not null
    - latitude text
    - longitude text
    - building text
    - floor text
    - notes text
  tags: postgresql

- name: create options table
  become: yes
  become_user: postgres
  postgresql_table: 
    db: wifimon_database
    name: options
    columns:
    - optionsid serial primary key
    - userdata text not null
    - uservisualoption text not null
    - correlationmethod text not null
  tags: postgresql

- name: grant database privileges to wifimon_user
  become: yes
  become_user: postgres
  postgresql_privs:
    db: wifimon_database
    privs: USAGE
    type: schema
    objs: public 
    roles: wifimon_user
    grant_option: yes
  tags: postgresql

- name: grant connect privileges to wifimon_user
  become: yes
  become_user: postgres
  postgresql_privs:
    db: wifimon_database
    privs: CONNECT
    type: database
    objs: wifimon_database
    roles: wifimon_user
    grant_option: yes
  tags: postgresql

- name: grant edit privileges for tables
  become: yes
  become_user: postgres
  postgresql_privs:
    db: wifimon_database
    privs: SELECT,INSERT,DELETE
    type: table
    objs: subnets,users,accesspoints,options
    roles: wifimon_user
    grant_option: yes
  tags: postgresql

- name: grant update privileges for tables
  become: yes
  become_user: postgres
  postgresql_privs:
    db: wifimon_database
    privs: UPDATE 
    type: table
    objs: accesspoints,options
    roles: wifimon_user
    grant_option: yes
  tags: postgresql

- name: Grant usage privileges on sequences
  become: yes
  become_user: postgres
  postgresql_privs:
    db: wifimon_database
    privs: USAGE,SELECT
    type: sequence
    objs: subnets_subnet_id_seq,users_id_seq
    roles: wifimon_user
    grant_option: yes
  tags: postgresql

- name: Grant update privileges on sequences
  become: yes
  become_user: postgres
  postgresql_privs:
    db: wifimon_database
    privs: USAGE,SELECT,UPDATE
    type: sequence
    objs: options_optionsid_seq,accesspoints_apid_seq 
    roles: wifimon_user
    grant_option: yes
  tags: postgresql

- name: create postgres admin account
  ignore_errors: yes
  become: yes
  become_user: postgres
  postgresql_query: 
    db: wifimon_database
    query: INSERT INTO users VALUES (%s,%s,%s,'ADMIN')
    positional_args:
    - 1
    - admin@test.com
    - $2a$06$AnM.QevGa4BPGg7hc3nEBua6stnbZ8h4PrCjSbDxW.LWL7t4MX8vO

- name: install wifimon
  apt:
    deb: https://fl-5-205.unil.cloud.switch.ch/wifimon-agent-0.1.1-SNAPSHOT.deb
  tags: wifimon

- name: rename .war files
  ignore_errors: yes
  command: mv /usr/lib/wifimon/secure-processor-0.1.1-SNAPSHOT.war /usr/lib/wifimon/secure-processor-0.1.1.war
  tags: wifimon 

- name: rename .war files
  ignore_errors: yes
  command: mv /usr/lib/wifimon/ui-0.1.1-SNAPSHOT.war /usr/lib/wifimon/ui-0.1.1.war
  tags: wifimon

- name: change permissions for elasticsearch.sh
  file: 
    dest: /usr/lib/wifimon/elasticsearch.sh
    mode: a+x
  tags: wifimon

- name: change permissions for start.sh
  file:
    dest: /usr/lib/wifimon/start.sh
    mode: a+x
  tags: wifimon

- name: configure elasticsearch.sh
  replace:
    path: /usr/lib/wifimon/elasticsearch.sh
    regexp: 'FQDN'
    replace: "{{ host_name }}"
  tags: wifimon
  
- name: run elasticsearch.sh
  shell: /usr/lib/wifimon/elasticsearch.sh

#- name: copy index patten json files
# copy:
#    src: roles/ansible-role-wifimon/index-patterns/
#    dest: /usr/lib/wifimon/index-patterns
#  tags: wifimon

- name: create wifimon index pattern
  ignore_errors: yes
  uri:
    url: http://{{ host_name }}:5601/api/saved_objects/index-pattern/wifimon_v0.1
    method: POST
    body: "{{ lookup('file', 'wifimon.json') | to_json }}"
    body_format: "json"
    headers:
      kbn-xsrf: true
  tags: wifimon

- name: create radius log index pattern
  ignore_errors: yes
  uri:
    url: http://{{ host_name }}:5601/api/saved_objects/index-pattern/radiuslogs_v0.1
    method: POST
    body: "{{ lookup('file', 'radiuslogs.json') | to_json }}"
    body_format: "json"
    headers:
      kbn-xsrf: true
  tags: wifimon

- name: create probes index pattern
  ignore_errors: yes
  uri:
    url: http://{{ host_name }}:5601/api/saved_objects/index-pattern/probes_v0.1
    method: POST
    body: "{{ lookup('file', 'probes.json') | to_json }}"
    body_format: "json"
    headers:
      kbn-xsrf: true
  tags: wifimon

- name: create dhcplogs index pattern
  ignore_errors: yes
  uri:
    url: http://{{ host_name }}:5601/api/saved_objects/index-pattern/dhcplogs_v0.1
    method: POST
    body: "{{ lookup('file', 'dhcplogs.json') | to_json }}"
    body_format: "json"
    headers:
      kbn-xsrf: true
  tags: wifimon
